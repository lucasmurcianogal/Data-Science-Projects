{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Socioeconomic prediction model Aragon (Spain)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### *by Lucas Murciano Galindo*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "CSV Document with inmigration data from regions in Aragon is available at OpenData Aragon. \n",
    "\n",
    "Firstly Data is read and absence of NaN values is confirmed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Año</th>\n",
       "      <th>Nacionalidad continente nombre</th>\n",
       "      <th>Nacionalidad área nombre</th>\n",
       "      <th>Nacionalidad país código</th>\n",
       "      <th>Nacionalidad país nombre</th>\n",
       "      <th>Residencia CCAA nombre</th>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th>Sexo</th>\n",
       "      <th>Personas</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>Alto Gállego</td>\n",
       "      <td>Hombres</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>La Ribagorza</td>\n",
       "      <td>Hombres</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>La Ribagorza</td>\n",
       "      <td>Mujeres</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>Cinco Villas</td>\n",
       "      <td>Hombres</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>Somontano de Barbastro</td>\n",
       "      <td>Mujeres</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Año Nacionalidad continente nombre Nacionalidad área nombre  \\\n",
       "0  2019                         Europa                    UE-28   \n",
       "1  2019                         Europa                    UE-28   \n",
       "2  2019                         Europa                    UE-28   \n",
       "3  2019                         Europa                    UE-28   \n",
       "4  2019                         Europa                    UE-28   \n",
       "\n",
       "   Nacionalidad país código Nacionalidad país nombre Residencia CCAA nombre  \\\n",
       "0                       102                  Austria                 Aragón   \n",
       "1                       102                  Austria                 Aragón   \n",
       "2                       102                  Austria                 Aragón   \n",
       "3                       102                  Austria                 Aragón   \n",
       "4                       102                  Austria                 Aragón   \n",
       "\n",
       "  Residencia comarca nombre     Sexo  Personas  \n",
       "0              Alto Gállego  Hombres         2  \n",
       "1              La Ribagorza  Hombres         2  \n",
       "2              La Ribagorza  Mujeres         1  \n",
       "3              Cinco Villas  Hombres         1  \n",
       "4    Somontano de Barbastro  Mujeres         1  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IC = pd.read_csv('Extranjeros por comarcas Aragón.csv')\n",
    "IC.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Año                               False\n",
       "Nacionalidad continente nombre    False\n",
       "Nacionalidad área nombre          False\n",
       "Nacionalidad país código          False\n",
       "Nacionalidad país nombre          False\n",
       "Residencia CCAA nombre            False\n",
       "Residencia comarca nombre         False\n",
       "Sexo                              False\n",
       "Personas                          False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IC.isna().any()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Exploratory Analysis: Main events on Inmigration"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.1 General Trend"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "Totals = pd.pivot_table(IC,values='Personas',index='Año',aggfunc=sum)\n",
    "Totals=pd.DataFrame(Totals)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Total inmigrantes en Aragón por año')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.plot(Totals,marker=\"o\")\n",
    "ax.set_title(\"Total inmigrantes en Aragón por año\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2 Trend by Origin Area"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Nacionalidad continente nombre</th>\n",
       "      <th>América</th>\n",
       "      <th>Apátridas y no consta</th>\n",
       "      <th>Asia</th>\n",
       "      <th>Europa</th>\n",
       "      <th>Oceanía</th>\n",
       "      <th>África</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Año</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>22146</td>\n",
       "      <td>26</td>\n",
       "      <td>1717</td>\n",
       "      <td>20312</td>\n",
       "      <td>76</td>\n",
       "      <td>17619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>27057</td>\n",
       "      <td>31</td>\n",
       "      <td>2217</td>\n",
       "      <td>27549</td>\n",
       "      <td>62</td>\n",
       "      <td>20629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>30754</td>\n",
       "      <td>35</td>\n",
       "      <td>3013</td>\n",
       "      <td>37989</td>\n",
       "      <td>81</td>\n",
       "      <td>24976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>30619</td>\n",
       "      <td>26</td>\n",
       "      <td>3844</td>\n",
       "      <td>44789</td>\n",
       "      <td>62</td>\n",
       "      <td>26021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>32621</td>\n",
       "      <td>28</td>\n",
       "      <td>4010</td>\n",
       "      <td>60024</td>\n",
       "      <td>39</td>\n",
       "      <td>27682</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Nacionalidad continente nombre  América  Apátridas y no consta  Asia  Europa  \\\n",
       "Año                                                                            \n",
       "2003                              22146                     26  1717   20312   \n",
       "2004                              27057                     31  2217   27549   \n",
       "2005                              30754                     35  3013   37989   \n",
       "2006                              30619                     26  3844   44789   \n",
       "2007                              32621                     28  4010   60024   \n",
       "\n",
       "Nacionalidad continente nombre  Oceanía  África  \n",
       "Año                                              \n",
       "2003                                 76   17619  \n",
       "2004                                 62   20629  \n",
       "2005                                 81   24976  \n",
       "2006                                 62   26021  \n",
       "2007                                 39   27682  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Areas = pd.pivot_table(IC,values='Personas',index='Año',columns='Nacionalidad continente nombre',aggfunc=sum)\n",
    "Areas=pd.DataFrame(Areas)\n",
    "Areas.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x11ff74250>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig1, ax1 = plt.subplots()\n",
    "ax1.plot(Areas,marker=\"+\")\n",
    "ax1.legend(['America','Apátridas','Asia','Europa','Oceania','Africa'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As it can be seen in the graph, trend has different behaviour depending on the area of origin:\n",
    "\n",
    "- Europe: High variation, strong growht before 2008. Constant lebel until 2014 and strong decrease until 2019\n",
    "- America: Constant number, decreasing trend after 2010\n",
    "- Africa: Constant number\n",
    "- Asia: Constant increase with years"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3 Distribution by Region"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Data in 2019"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Año</th>\n",
       "      <th>Nacionalidad continente nombre</th>\n",
       "      <th>Nacionalidad área nombre</th>\n",
       "      <th>Nacionalidad país código</th>\n",
       "      <th>Nacionalidad país nombre</th>\n",
       "      <th>Residencia CCAA nombre</th>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th>Sexo</th>\n",
       "      <th>Personas</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>Alto Gállego</td>\n",
       "      <td>Hombres</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>La Ribagorza</td>\n",
       "      <td>Hombres</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>La Ribagorza</td>\n",
       "      <td>Mujeres</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>Cinco Villas</td>\n",
       "      <td>Hombres</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019</td>\n",
       "      <td>Europa</td>\n",
       "      <td>UE-28</td>\n",
       "      <td>102</td>\n",
       "      <td>Austria</td>\n",
       "      <td>Aragón</td>\n",
       "      <td>Somontano de Barbastro</td>\n",
       "      <td>Mujeres</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Año Nacionalidad continente nombre Nacionalidad área nombre  \\\n",
       "0  2019                         Europa                    UE-28   \n",
       "1  2019                         Europa                    UE-28   \n",
       "2  2019                         Europa                    UE-28   \n",
       "3  2019                         Europa                    UE-28   \n",
       "4  2019                         Europa                    UE-28   \n",
       "\n",
       "   Nacionalidad país código Nacionalidad país nombre Residencia CCAA nombre  \\\n",
       "0                       102                  Austria                 Aragón   \n",
       "1                       102                  Austria                 Aragón   \n",
       "2                       102                  Austria                 Aragón   \n",
       "3                       102                  Austria                 Aragón   \n",
       "4                       102                  Austria                 Aragón   \n",
       "\n",
       "  Residencia comarca nombre     Sexo  Personas  \n",
       "0              Alto Gállego  Hombres         2  \n",
       "1              La Ribagorza  Hombres         2  \n",
       "2              La Ribagorza  Mujeres         1  \n",
       "3              Cinco Villas  Hombres         1  \n",
       "4    Somontano de Barbastro  Mujeres         1  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Current = IC[IC['Año']==2019]\n",
    "Current.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "10 regions with least number of inmigrants"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Personas</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Sierra de Albarracín</th>\n",
       "      <td>257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Maestrazgo</th>\n",
       "      <td>294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Campo de Belchite</th>\n",
       "      <td>329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Aranda</th>\n",
       "      <td>532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Campo de Daroca</th>\n",
       "      <td>640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ribera Baja del Ebro</th>\n",
       "      <td>646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Martín</th>\n",
       "      <td>673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cuencas Mineras</th>\n",
       "      <td>700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Andorra-Sierra de Arcos</th>\n",
       "      <td>852</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gúdar-Javalambre</th>\n",
       "      <td>874</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Personas\n",
       "Residencia comarca nombre          \n",
       "Sierra de Albarracín            257\n",
       "Maestrazgo                      294\n",
       "Campo de Belchite               329\n",
       "Aranda                          532\n",
       "Campo de Daroca                 640\n",
       "Ribera Baja del Ebro            646\n",
       "Bajo Martín                     673\n",
       "Cuencas Mineras                 700\n",
       "Andorra-Sierra de Arcos         852\n",
       "Gúdar-Javalambre                874"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Com = pd.pivot_table(Current,values='Personas',index='Residencia comarca nombre',aggfunc=sum)\n",
    "Com.sort_values(by='Personas',inplace=True)\n",
    "Com.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "10 regions with most number of inmigrants"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Personas</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Central</th>\n",
       "      <td>81586</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Valdejalón</th>\n",
       "      <td>6201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hoya de Huesca / Plana de Uesca</th>\n",
       "      <td>5888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comunidad de Calatayud</th>\n",
       "      <td>5474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Cinca / Baix Cinca</th>\n",
       "      <td>5131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comunidad de Teruel</th>\n",
       "      <td>4107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cinco Villas</th>\n",
       "      <td>3861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Aragón</th>\n",
       "      <td>3530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Aragón-Caspe / Baix Aragó-Casp</th>\n",
       "      <td>3453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cinca Medio</th>\n",
       "      <td>3370</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     Personas\n",
       "Residencia comarca nombre                    \n",
       "Central                                 81586\n",
       "Valdejalón                               6201\n",
       "Hoya de Huesca / Plana de Uesca          5888\n",
       "Comunidad de Calatayud                   5474\n",
       "Bajo Cinca / Baix Cinca                  5131\n",
       "Comunidad de Teruel                      4107\n",
       "Cinco Villas                             3861\n",
       "Bajo Aragón                              3530\n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp      3453\n",
       "Cinca Medio                              3370"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Com.sort_values(by='Personas',ascending=False, inplace=True)\n",
    "Com.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Distribution of Inmigrants by Region and Origin Country**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Nacionalidad país nombre</th>\n",
       "      <th>Albania</th>\n",
       "      <th>Alemania</th>\n",
       "      <th>Andorra</th>\n",
       "      <th>Angola</th>\n",
       "      <th>Apátridas</th>\n",
       "      <th>Arabia Saudí</th>\n",
       "      <th>Argelia</th>\n",
       "      <th>Argentina</th>\n",
       "      <th>Armenia</th>\n",
       "      <th>Australia</th>\n",
       "      <th>...</th>\n",
       "      <th>Turquía</th>\n",
       "      <th>Túnez</th>\n",
       "      <th>Ucrania</th>\n",
       "      <th>Uganda</th>\n",
       "      <th>Uruguay</th>\n",
       "      <th>Uzbekistán</th>\n",
       "      <th>Venezuela</th>\n",
       "      <th>Vietnam</th>\n",
       "      <th>Yemen</th>\n",
       "      <th>Zimbabwe</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Alto Gállego</th>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Andorra-Sierra de Arcos</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Aranda</th>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Aragón</th>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Aragón-Caspe / Baix Aragó-Casp</th>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 150 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Nacionalidad país nombre             Albania  Alemania  Andorra  Angola  \\\n",
       "Residencia comarca nombre                                                 \n",
       "Alto Gállego                               0        12        0       1   \n",
       "Andorra-Sierra de Arcos                    0         0        0       0   \n",
       "Aranda                                     0         4        0       0   \n",
       "Bajo Aragón                                0         7        2       0   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp        0        26        0       0   \n",
       "\n",
       "Nacionalidad país nombre             Apátridas  Arabia Saudí  Argelia  \\\n",
       "Residencia comarca nombre                                               \n",
       "Alto Gállego                                 0             0       10   \n",
       "Andorra-Sierra de Arcos                      0             0        0   \n",
       "Aranda                                       0             0       15   \n",
       "Bajo Aragón                                  8             0       58   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp          0             0       31   \n",
       "\n",
       "Nacionalidad país nombre             Argentina  Armenia  Australia  ...  \\\n",
       "Residencia comarca nombre                                           ...   \n",
       "Alto Gállego                                35        0          0  ...   \n",
       "Andorra-Sierra de Arcos                     12        0          0  ...   \n",
       "Aranda                                       1        4          0  ...   \n",
       "Bajo Aragón                                 23        0          0  ...   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp          2        0          0  ...   \n",
       "\n",
       "Nacionalidad país nombre             Turquía  Túnez  Ucrania  Uganda  Uruguay  \\\n",
       "Residencia comarca nombre                                                       \n",
       "Alto Gállego                               0      4       39       0       12   \n",
       "Andorra-Sierra de Arcos                    0      0        0       0        5   \n",
       "Aranda                                     0      0        1       0        1   \n",
       "Bajo Aragón                                1      2       30       0       15   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp        2      3       11       0        0   \n",
       "\n",
       "Nacionalidad país nombre             Uzbekistán  Venezuela  Vietnam  Yemen  \\\n",
       "Residencia comarca nombre                                                    \n",
       "Alto Gállego                                  0         22        0      0   \n",
       "Andorra-Sierra de Arcos                       0          7        0      0   \n",
       "Aranda                                        0          0        0      0   \n",
       "Bajo Aragón                                   0         11        0      0   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp           0          4        0      0   \n",
       "\n",
       "Nacionalidad país nombre             Zimbabwe  \n",
       "Residencia comarca nombre                      \n",
       "Alto Gállego                                0  \n",
       "Andorra-Sierra de Arcos                     0  \n",
       "Aranda                                      0  \n",
       "Bajo Aragón                                 0  \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp         0  \n",
       "\n",
       "[5 rows x 150 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Dist_Com = pd.pivot_table(Current,values ='Personas',columns='Nacionalidad país nombre',index = 'Residencia comarca nombre',aggfunc=sum)\n",
    "Dist_Com.fillna(value=0,inplace=True)\n",
    "Dist_Com= Dist_Com.astype(int)\n",
    "Dist_Com.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Normalized"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Nacionalidad país nombre</th>\n",
       "      <th>Albania</th>\n",
       "      <th>Alemania</th>\n",
       "      <th>Andorra</th>\n",
       "      <th>Angola</th>\n",
       "      <th>Apátridas</th>\n",
       "      <th>Arabia Saudí</th>\n",
       "      <th>Argelia</th>\n",
       "      <th>Argentina</th>\n",
       "      <th>Armenia</th>\n",
       "      <th>Australia</th>\n",
       "      <th>...</th>\n",
       "      <th>Turquía</th>\n",
       "      <th>Túnez</th>\n",
       "      <th>Ucrania</th>\n",
       "      <th>Uganda</th>\n",
       "      <th>Uruguay</th>\n",
       "      <th>Uzbekistán</th>\n",
       "      <th>Venezuela</th>\n",
       "      <th>Vietnam</th>\n",
       "      <th>Yemen</th>\n",
       "      <th>Zimbabwe</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Alto Gállego</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.008759</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00073</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.007299</td>\n",
       "      <td>0.025547</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002920</td>\n",
       "      <td>0.028467</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.008759</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.016058</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Andorra-Sierra de Arcos</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014085</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.005869</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.008216</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Aranda</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.007519</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.028195</td>\n",
       "      <td>0.001880</td>\n",
       "      <td>0.007519</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Aragón</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001983</td>\n",
       "      <td>0.000567</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.002266</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.016431</td>\n",
       "      <td>0.006516</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000283</td>\n",
       "      <td>0.000567</td>\n",
       "      <td>0.008499</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.004249</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.003116</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bajo Aragón-Caspe / Baix Aragó-Casp</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.007530</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.008978</td>\n",
       "      <td>0.000579</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000579</td>\n",
       "      <td>0.000869</td>\n",
       "      <td>0.003186</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001158</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 150 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Nacionalidad país nombre             Albania  Alemania   Andorra   Angola  \\\n",
       "Residencia comarca nombre                                                   \n",
       "Alto Gállego                             0.0  0.008759  0.000000  0.00073   \n",
       "Andorra-Sierra de Arcos                  0.0  0.000000  0.000000  0.00000   \n",
       "Aranda                                   0.0  0.007519  0.000000  0.00000   \n",
       "Bajo Aragón                              0.0  0.001983  0.000567  0.00000   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp      0.0  0.007530  0.000000  0.00000   \n",
       "\n",
       "Nacionalidad país nombre             Apátridas  Arabia Saudí   Argelia  \\\n",
       "Residencia comarca nombre                                                \n",
       "Alto Gállego                          0.000000           0.0  0.007299   \n",
       "Andorra-Sierra de Arcos               0.000000           0.0  0.000000   \n",
       "Aranda                                0.000000           0.0  0.028195   \n",
       "Bajo Aragón                           0.002266           0.0  0.016431   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp   0.000000           0.0  0.008978   \n",
       "\n",
       "Nacionalidad país nombre             Argentina   Armenia  Australia  ...  \\\n",
       "Residencia comarca nombre                                            ...   \n",
       "Alto Gállego                          0.025547  0.000000        0.0  ...   \n",
       "Andorra-Sierra de Arcos               0.014085  0.000000        0.0  ...   \n",
       "Aranda                                0.001880  0.007519        0.0  ...   \n",
       "Bajo Aragón                           0.006516  0.000000        0.0  ...   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp   0.000579  0.000000        0.0  ...   \n",
       "\n",
       "Nacionalidad país nombre              Turquía     Túnez   Ucrania  Uganda  \\\n",
       "Residencia comarca nombre                                                   \n",
       "Alto Gállego                         0.000000  0.002920  0.028467     0.0   \n",
       "Andorra-Sierra de Arcos              0.000000  0.000000  0.000000     0.0   \n",
       "Aranda                               0.000000  0.000000  0.001880     0.0   \n",
       "Bajo Aragón                          0.000283  0.000567  0.008499     0.0   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp  0.000579  0.000869  0.003186     0.0   \n",
       "\n",
       "Nacionalidad país nombre              Uruguay  Uzbekistán  Venezuela  Vietnam  \\\n",
       "Residencia comarca nombre                                                       \n",
       "Alto Gállego                         0.008759         0.0   0.016058      0.0   \n",
       "Andorra-Sierra de Arcos              0.005869         0.0   0.008216      0.0   \n",
       "Aranda                               0.001880         0.0   0.000000      0.0   \n",
       "Bajo Aragón                          0.004249         0.0   0.003116      0.0   \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp  0.000000         0.0   0.001158      0.0   \n",
       "\n",
       "Nacionalidad país nombre             Yemen  Zimbabwe  \n",
       "Residencia comarca nombre                             \n",
       "Alto Gállego                           0.0       0.0  \n",
       "Andorra-Sierra de Arcos                0.0       0.0  \n",
       "Aranda                                 0.0       0.0  \n",
       "Bajo Aragón                            0.0       0.0  \n",
       "Bajo Aragón-Caspe / Baix Aragó-Casp    0.0       0.0  \n",
       "\n",
       "[5 rows x 150 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Com_Norm = Dist_Com.div(Dist_Com.sum(axis=1), axis=0)\n",
    "Com_Norm.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Most Common Countrys by Region**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def return_most_common_venues(row, num_top_venues):\n",
    "    row_categories = row.iloc[1:]\n",
    "    row_categories_sorted = row_categories.sort_values(ascending=False)\n",
    "    \n",
    "    return row_categories_sorted.index.values[0:num_top_venues]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th>1st Most Common Country</th>\n",
       "      <th>2nd Most Common Country</th>\n",
       "      <th>3rd Most Common Country</th>\n",
       "      <th>4th Most Common Country</th>\n",
       "      <th>5th Most Common Country</th>\n",
       "      <th>6th Most Common Country</th>\n",
       "      <th>7th Most Common Country</th>\n",
       "      <th>8th Most Common Country</th>\n",
       "      <th>9th Most Common Country</th>\n",
       "      <th>10th Most Common Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alto Gállego</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Ucrania</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Francia</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Italia</td>\n",
       "      <td>Nicaragua</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Andorra-Sierra de Arcos</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Pakistán</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>China</td>\n",
       "      <td>Chile</td>\n",
       "      <td>Francia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Aranda</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Argelia</td>\n",
       "      <td>Brasil</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Italia</td>\n",
       "      <td>Bulgaria</td>\n",
       "      <td>Armenia</td>\n",
       "      <td>China</td>\n",
       "      <td>Alemania</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bajo Aragón</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Argelia</td>\n",
       "      <td>Pakistán</td>\n",
       "      <td>China</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Italia</td>\n",
       "      <td>Ucrania</td>\n",
       "      <td>Bulgaria</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Bajo Aragón-Caspe / Baix Aragó-Casp</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Pakistán</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Reino Unido</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Senegal</td>\n",
       "      <td>Países Bajos</td>\n",
       "      <td>Bulgaria</td>\n",
       "      <td>Gambia</td>\n",
       "      <td>República Checa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Residencia comarca nombre 1st Most Common Country  \\\n",
       "0                         Alto Gállego                 Rumanía   \n",
       "1              Andorra-Sierra de Arcos               Marruecos   \n",
       "2                               Aranda                 Rumanía   \n",
       "3                          Bajo Aragón                 Rumanía   \n",
       "4  Bajo Aragón-Caspe / Baix Aragó-Casp               Marruecos   \n",
       "\n",
       "  2nd Most Common Country 3rd Most Common Country 4th Most Common Country  \\\n",
       "0               Marruecos                Portugal                Colombia   \n",
       "1                 Rumanía                 Polonia                Pakistán   \n",
       "2               Marruecos                 Argelia                  Brasil   \n",
       "3               Marruecos                 Polonia                 Argelia   \n",
       "4                Pakistán                 Rumanía             Reino Unido   \n",
       "\n",
       "  5th Most Common Country 6th Most Common Country 7th Most Common Country  \\\n",
       "0                 Ucrania               Argentina                 Francia   \n",
       "1               Nicaragua               Argentina                Colombia   \n",
       "2                Colombia                  Italia                Bulgaria   \n",
       "3                Pakistán                   China                Colombia   \n",
       "4                 Polonia                 Senegal            Países Bajos   \n",
       "\n",
       "  8th Most Common Country 9th Most Common Country 10th Most Common Country  \n",
       "0                 Polonia                  Italia                Nicaragua  \n",
       "1                   China                   Chile                  Francia  \n",
       "2                 Armenia                   China                 Alemania  \n",
       "3                  Italia                 Ucrania                 Bulgaria  \n",
       "4                Bulgaria                  Gambia          República Checa  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_top_venues = 10\n",
    "\n",
    "indicators = ['st', 'nd', 'rd']\n",
    "\n",
    "# create columns according to number of top venues\n",
    "columns = ['Residencia comarca nombre']\n",
    "for ind in np.arange(num_top_venues):\n",
    "    try:\n",
    "        columns.append('{}{} Most Common Country'.format(ind+1, indicators[ind]))\n",
    "    except:\n",
    "        columns.append('{}th Most Common Country'.format(ind+1))\n",
    "\n",
    "# create a new dataframe\n",
    "comarcas_sorted = pd.DataFrame(columns=columns)\n",
    "comarcas_sorted['Residencia comarca nombre'] = Com_Norm.index\n",
    "\n",
    "for ind in np.arange(Com_Norm.shape[0]):\n",
    "    comarcas_sorted.iloc[ind, 1:] = return_most_common_venues(Com_Norm.iloc[ind, :], num_top_venues)\n",
    "\n",
    "comarcas_sorted.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.4 Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Matplotlib and associated plotting modules\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "# import k-means from clustering stage\n",
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 3, 0, 0, 1, 2, 1, 3, 0, 0], dtype=int32)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We set initial number of clusters = 4\n",
    "kclusters = 4\n",
    "comarcas_clustering = Com_Norm\n",
    "\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(comarcas_clustering)\n",
    "\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Elbow Method**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "distortions = []\n",
    "for i in range(1, 11):\n",
    "    km = KMeans(\n",
    "        n_clusters=i, init='random',\n",
    "        n_init=10, max_iter=300,\n",
    "        tol=1e-04, random_state=0\n",
    "    )\n",
    "    km.fit(comarcas_clustering)\n",
    "    distortions.append(km.inertia_)\n",
    "\n",
    "# plot\n",
    "plt.plot(range(1, 11), distortions, marker='o')\n",
    "plt.xlabel('Number of clusters')\n",
    "plt.ylabel('Distortion')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Optimum k=4** in introduced in KMeans calculation above"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Residencia comarca nombre</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Country</th>\n",
       "      <th>2nd Most Common Country</th>\n",
       "      <th>3rd Most Common Country</th>\n",
       "      <th>4th Most Common Country</th>\n",
       "      <th>5th Most Common Country</th>\n",
       "      <th>6th Most Common Country</th>\n",
       "      <th>7th Most Common Country</th>\n",
       "      <th>8th Most Common Country</th>\n",
       "      <th>9th Most Common Country</th>\n",
       "      <th>10th Most Common Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alto Gállego</td>\n",
       "      <td>3</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Ucrania</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Francia</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Italia</td>\n",
       "      <td>Nicaragua</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Andorra-Sierra de Arcos</td>\n",
       "      <td>3</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Pakistán</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>China</td>\n",
       "      <td>Chile</td>\n",
       "      <td>Francia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Aranda</td>\n",
       "      <td>0</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Argelia</td>\n",
       "      <td>Brasil</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Italia</td>\n",
       "      <td>Bulgaria</td>\n",
       "      <td>Armenia</td>\n",
       "      <td>China</td>\n",
       "      <td>Alemania</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bajo Aragón</td>\n",
       "      <td>0</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Argelia</td>\n",
       "      <td>Pakistán</td>\n",
       "      <td>China</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Italia</td>\n",
       "      <td>Ucrania</td>\n",
       "      <td>Bulgaria</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Bajo Aragón-Caspe / Baix Aragó-Casp</td>\n",
       "      <td>1</td>\n",
       "      <td>Marruecos</td>\n",
       "      <td>Pakistán</td>\n",
       "      <td>Rumanía</td>\n",
       "      <td>Reino Unido</td>\n",
       "      <td>Polonia</td>\n",
       "      <td>Senegal</td>\n",
       "      <td>Países Bajos</td>\n",
       "      <td>Bulgaria</td>\n",
       "      <td>Gambia</td>\n",
       "      <td>República Checa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Residencia comarca nombre  Cluster Labels  \\\n",
       "0                         Alto Gállego               3   \n",
       "1              Andorra-Sierra de Arcos               3   \n",
       "2                               Aranda               0   \n",
       "3                          Bajo Aragón               0   \n",
       "4  Bajo Aragón-Caspe / Baix Aragó-Casp               1   \n",
       "\n",
       "  1st Most Common Country 2nd Most Common Country 3rd Most Common Country  \\\n",
       "0                 Rumanía               Marruecos                Portugal   \n",
       "1               Marruecos                 Rumanía                 Polonia   \n",
       "2                 Rumanía               Marruecos                 Argelia   \n",
       "3                 Rumanía               Marruecos                 Polonia   \n",
       "4               Marruecos                Pakistán                 Rumanía   \n",
       "\n",
       "  4th Most Common Country 5th Most Common Country 6th Most Common Country  \\\n",
       "0                Colombia                 Ucrania               Argentina   \n",
       "1                Pakistán               Nicaragua               Argentina   \n",
       "2                  Brasil                Colombia                  Italia   \n",
       "3                 Argelia                Pakistán                   China   \n",
       "4             Reino Unido                 Polonia                 Senegal   \n",
       "\n",
       "  7th Most Common Country 8th Most Common Country 9th Most Common Country  \\\n",
       "0                 Francia                 Polonia                  Italia   \n",
       "1                Colombia                   China                   Chile   \n",
       "2                Bulgaria                 Armenia                   China   \n",
       "3                Colombia                  Italia                 Ucrania   \n",
       "4            Países Bajos                Bulgaria                  Gambia   \n",
       "\n",
       "  10th Most Common Country  \n",
       "0                Nicaragua  \n",
       "1                  Francia  \n",
       "2                 Alemania  \n",
       "3                 Bulgaria  \n",
       "4          República Checa  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# add clustering labels\n",
    "comarcas_sorted.insert(1, 'Cluster Labels', kmeans.labels_)\n",
    "comarcas_sorted.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Clusters Insights**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Cluster 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Rumanía    11\n",
       "Name: 1st Most Common Country, dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Com_0 = comarcas_sorted.loc[comarcas_sorted['Cluster Labels']==0]\n",
    "Com_0['1st Most Common Country'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Cluster 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Marruecos    6\n",
       "Name: 1st Most Common Country, dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Com_1 = comarcas_sorted.loc[comarcas_sorted['Cluster Labels']==1]\n",
    "Com_1['1st Most Common Country'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Cluster 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Rumanía      6\n",
       "Marruecos    1\n",
       "Bulgaria     1\n",
       "Name: 1st Most Common Country, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Com_2 = comarcas_sorted.loc[comarcas_sorted['Cluster Labels']==2]\n",
    "Com_2['1st Most Common Country'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Cluster 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Rumanía      7\n",
       "Marruecos    1\n",
       "Name: 1st Most Common Country, dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Com_3 = comarcas_sorted.loc[comarcas_sorted['Cluster Labels']==3]\n",
    "Com_3['1st Most Common Country'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.Exploratory Analysis: Main Events on Job Market"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
